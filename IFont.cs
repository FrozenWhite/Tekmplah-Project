namespace Teknomli
{
    internal interface IFont
    {
        public static int ConvertHoraiFontCode(char code)
        {
            const int ofs = 0;
            return code switch
            {
                '0' => 0,
                '1' => 1,
                '2' => 2,
                '3' => 3,
                '4' => 4,
                '5' => 5,
                '6' => 6,
                '7' => 7,
                '8' => 8,
                '9' => 9,
                'A' => 10,
                'B' => 11,
                'C' => 12,
                'D' => 13,
                'E' => 14,
                'F' => 15,
                'G' => 16,
                'H' => 17,
                'I' => 18,
                'J' => 19,
                'K' => 20,
                'L' => 21,
                'M' => 22,
                'N' => 23,
                'O' => 24,
                'P' => 25,
                'Q' => 26,
                'R' => 27,
                'S' => 28,
                'T' => 29,
                'U' => 30,
                'V' => 31,
                'W' => 32,
                'X' => 33,
                'Y' => 34,
                'Z' => 35,
                'a' => 36,
                'b' => 37,
                'c' => 38,
                'd' => 39,
                'e' => 40,
                'f' => 41,
                'g' => 42,
                'h' => 43,
                'i' => 44,
                'j' => 45,
                'k' => 46,
                'l' => 47,
                'm' => 48,
                'n' => 49,
                'o' => 50,
                'p' => 51,
                'q' => 52,
                'r' => 53,
                's' => 54,
                't' => 55,
                'u' => 56,
                'v' => 57,
                'w' => 58,
                'x' => 59,
                'y' => 60,
                'z' => 61,
                '?' => 62,
                '!' => 63,
                '"' => 64,
                '#' => 65,
                '$' => 66,
                '%' => 67,
                '&' => 68,
                '\'' => 69,
                '(' => 70,
                ')' => 71,
                '`' => 72,
                '\\' => 73,
                '{' => 74,
                '}' => 75,
                '/' => 76,
                '+' => 77,
                '-' => 78,
                '*' => 79,
                '.' => 80,
                ',' => 81,
                ' ' => 82,
                '>' => 83,
                '<' => 84,
                '=' => 85,
                '~' => 86,
                '^' => 87,
                '[' => 88,
                ']' => 89,
                '|' => 90,
                '@' => 91,
                ':' => 92,
                ';' => 93,
                '_' => 94,
                '彩' => 95,
                _ => -1
            } + ofs;
        }

        public static char ConvertChar(int code)
        {
            return code switch
            {
                0 => '0',
                1 => '1',
                2 => '2',
                3 => '3',
                4 => '4',
                5 => '5',
                6 => '6',
                7 => '7',
                8 => '8',
                9 => '9',
                10 => 'A',
                11 => 'B',
                12 => 'C',
                13 => 'D',
                14 => 'E',
                15 => 'F',
                16 => 'G',
                17 => 'H',
                18 => 'I',
                19 => 'J',
                20 => 'K',
                21 => 'L',
                22 => 'M',
                23 => 'N',
                24 => 'O',
                25 => 'P',
                26 => 'Q',
                27 => 'R',
                28 => 'S',
                29 => 'T',
                30 => 'U',
                31 => 'V',
                32 => 'W',
                33 => 'X',
                34 => 'Y',
                35 => 'Z',
                36 => 'a',
                37 => 'b',
                38 => 'c',
                39 => 'd',
                40 => 'e',
                41 => 'f',
                42 => 'g',
                43 => 'h',
                44 => 'i',
                45 => 'j',
                46 => 'k',
                47 => 'l',
                48 => 'm',
                49 => 'n',
                50 => 'o',
                51 => 'p',
                52 => 'q',
                53 => 'r',
                54 => 's',
                55 => 't',
                56 => 'u',
                57 => 'v',
                58 => 'w',
                59 => 'x',
                60 => 'y',
                61 => 'z',
                62 => '?',
                63 => '!',
                64 => '"',
                65 => '#',
                66 => '$',
                67 => '%',
                68 => '&',
                69 => '\'',
                70 => '(',
                71 => ')',
                72 => '`',
                73 => '\\',
                74 => '{',
                75 => '}',
                76 => '/',
                77 => '+',
                78 => '-',
                79 => '*',
                80 => '.',
                81 => ',',
                82 => ' ',
                83 => '>',
                84 => '<',
                85 => '=',
                86 => '~',
                87 => '^',
                88 => '[',
                89 => ']',
                90 => '|',
                91 => '@',
                92 => ':',
                93 => ';',
                94 => '_',
                95 => '彩',
                _ => '0',
            };
        }

        public static int? TranslateKeyCode(byte? code)
        {
            return code switch
            {
                #region NonShift
                // a (15) - z (40)
                >= 15 and <= 40 => code - 15 + 36,
                // 0 (41) - 9 (50)
                >= 41 and <= 50 => code - 41,
                // symbol
                51 => 78,
                52 => 87,
                53 => 73,
                54 => 91,
                55 => 88,
                56 => 89,
                57 => 93,
                58 => 92,
                59 => 76,
                60 => 73,
                61 => 80,
                62 => 81,
                10 => 82,
                #endregion
                #region Shift
                // ! (63) - ) (71)
                >= 63 and <= 71 => code,
                // A (72) - Z (97)
                >= 72 and <= 97 => code - 72 + 10,
                //symbol
                98 => 85,
                99 => 64,
                100 => 90,
                101 => 86,
                102 => 74,
                103 => 75,
                104 => 77,
                105 => 79,
                106 => 62,
                107 => 94,
                108 => 83,
                109 => 84,
                #endregion
                _ => null
            };
        }
    }
}
